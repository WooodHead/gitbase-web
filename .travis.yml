branches:
  only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

language: go

services:
  - docker

go:
  - "1.11.x"

before_install:
  - . $HOME/.nvm/nvm.sh
  - nvm install 8
  - nvm use 8
  - npm install -g yarn

install:
  - make dependencies

stages:
  - name: validate and build
  - name: release to github
    if: tag IS present
  - name: push to dockerhub
    if: tag IS present

jobs:
  include:
    # validate and build
    - stage: validate and build
      name: 'Test coverage & linters'
      script:
        - make test
        - make packages
        - make lint
        - make coverage
        - make validate-commit
    - name: 'Integration tests'
      script:
      - docker run -d --name bblfshd --privileged --volume $HOME/bblfsh-drivers:/var/lib/bblfshd -p "9432:9432" bblfsh/bblfshd
      - sleep 5
      - docker exec -it bblfshd bblfshctl driver install --force go docker://bblfsh/go-driver:latest
      - docker exec -it bblfshd bblfshctl driver install --force javascript docker://bblfsh/javascript-driver:latest
      - mkdir $HOME/repos
      - git clone https://github.com/src-d/gitbase-web.git $HOME/repos/gitbase-web
      - docker run -d --name gitbase -p "3367:3306" -e "BBLFSH_ENDPOINT=bblfshd:9432" --volume $HOME/repos:/opt/repos --link bblfshd srcd/gitbase:v0.19.0
      - sleep 15
      - GITBASEPG_DB_CONNECTION='root@tcp(localhost:3367)/none' GITBASEPG_INTEGRATION_TESTS=true make test
    - name: 'Footer test'
      script:
      - PKG_OS=linux make build
      - make docker-build
      - export FOOTER_HTML='<div class="custom-base64-html"></div>'
      - export FOOTER_HTML_BASE64=`echo -n $FOOTER_HTML | base64`
      - docker run --rm -d --publish 8080:8080 --env GITBASEPG_FOOTER_HTML=$FOOTER_HTML_BASE64 srcd/gitbase-web:$(make version)
      - sleep 5
      - curl http://127.0.0.1:8080 | grep "$FOOTER_HTML"
    # release to github
    - stage: release to github
      name: 'Release to GitHub'
      script:
        - make packages
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: build/*.tar.gz
        skip_cleanup: true
        on:
          all_branches: true

cache:
  directories:
    - $HOME/bblfsh-drivers/images

before_cache:
  # make bblfsh images readable
  - sudo chmod -R 777 $HOME/bblfsh-drivers/images
